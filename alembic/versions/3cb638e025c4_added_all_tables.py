"""Added all tables

Revision ID: 3cb638e025c4
Revises: 
Create Date: 2021-11-25 11:01:46.314013

"""
from alembic import op
import sqlalchemy as sa
import models

# revision identifiers, used by Alembic.
revision = '3cb638e025c4'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('company',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('company_name', sa.String(length=100), nullable=True),
    sa.Column('company_url', sa.String(length=100), nullable=True),
    sa.Column('custom_domain_url', sa.String(length=100), nullable=True),
    sa.Column('created_time', sa.DateTime(timezone=True), nullable=True),
    sa.Column('updated_time', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_company_id'), 'company', ['id'], unique=False)
    op.create_table('users',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('first_name', sa.String(length=100), nullable=True),
    sa.Column('last_name', sa.String(length=100), nullable=True),
    sa.Column('email', sa.String(length=100), nullable=False),
    sa.Column('password', sa.LargeBinary(), nullable=True),
    sa.Column('role', models.ChoiceType(models.User.ROLE_CHOICES), nullable=True),
    sa.Column('email_verified', sa.Boolean(), nullable=True),
    sa.Column('email_verification_code', sa.String(length=100), nullable=True),
    sa.Column('designation', sa.String(length=100), nullable=True),
    sa.Column('country_code', sa.Integer(), nullable=True),
    sa.Column('contact_number', sa.BigInteger(), nullable=True),
    sa.Column('profile_photo', sa.LargeBinary(), nullable=True),
    sa.Column('email_notification', models.ChoiceType(models.User.EMAIL_NOTIFICATION_CHOICES), nullable=True),
    sa.Column('browser_notification_volume', sa.Integer(), nullable=True),
    sa.Column('browser_notification_sound', models.ChoiceType(models.User.NOTIFICATION_CHOICES), nullable=True),
    sa.Column('is_online', sa.Boolean(), nullable=True),
    sa.Column('last_seen', sa.DateTime(timezone=True), nullable=True),
    sa.Column('is_invited', sa.Boolean(), nullable=True),
    sa.Column('super_admin_id', sa.Integer(), nullable=True),
    sa.Column('last_login', sa.DateTime(timezone=True), nullable=True),
    sa.Column('email_invitor_id', sa.Integer(), nullable=True),
    sa.Column('email_invitation_status', sa.Integer(), nullable=True),
    sa.Column('created_time', sa.DateTime(timezone=True), nullable=True),
    sa.Column('updated_time', sa.DateTime(timezone=True), nullable=True),
    sa.Column('company_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['company_id'], ['company.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_index(op.f('ix_users_email_verification_code'), 'users', ['email_verification_code'], unique=True)
    op.create_index(op.f('ix_users_id'), 'users', ['id'], unique=False)
    op.create_table('account_options',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('super_admin_id', sa.Integer(), nullable=True),
    sa.Column('app_id', sa.String(length=200), nullable=True),
    sa.Column('csat_ratings_enabled', sa.Boolean(), nullable=True),
    sa.Column('send_fall_back_emails', sa.Boolean(), nullable=True),
    sa.Column('first_conversation_assignment_option', models.ChoiceType(models.AccountOptions.TEAM_CHOICES), nullable=True),
    sa.Column('first_conversation_assignment_id', sa.Integer(), nullable=True),
    sa.Column('allow_conversation_reassignment', sa.Boolean(), nullable=True),
    sa.Column('reassignment_duration', sa.Integer(), nullable=True),
    sa.Column('reassignment_interval_type', models.ChoiceType(models.AccountOptions.INTERVAL_CHOICES), nullable=True),
    sa.Column('unassigned_bot_can_reply', sa.Boolean(), nullable=True),
    sa.Column('waiting_queue_status_on', sa.Boolean(), nullable=True),
    sa.Column('maximum_concurrent_chats', sa.Integer(), nullable=True),
    sa.Column('auto_resolve_conversations', sa.Boolean(), nullable=True),
    sa.Column('auto_resolve_option', models.ChoiceType(models.AccountOptions.AUTO_RESOLVE_CHOICES), nullable=True),
    sa.Column('auto_resolve_time', sa.Integer(), nullable=True),
    sa.Column('auto_resolve_message', sa.String(length=200), nullable=True),
    sa.Column('company_email_for_conv_transcript', sa.String(length=100), nullable=True),
    sa.Column('send_transcripts_to_user', sa.Boolean(), nullable=True),
    sa.Column('show_pseudonyms', sa.Boolean(), nullable=True),
    sa.Column('enable_prechat_lead', sa.Boolean(), nullable=True),
    sa.Column('prechat_lead_collection_heading', sa.String(length=200), nullable=True),
    sa.Column('created_time', sa.DateTime(timezone=True), nullable=True),
    sa.Column('updated_time', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['super_admin_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('app_id'),
    sa.UniqueConstraint('super_admin_id')
    )
    op.create_index(op.f('ix_account_options_id'), 'account_options', ['id'], unique=False)
    op.create_table('away_message',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('super_admin_id', sa.Integer(), nullable=True),
    sa.Column('show_away_message', sa.Boolean(), nullable=True),
    sa.Column('collect_email_id', sa.Boolean(), nullable=True),
    sa.Column('away_message_for_known', sa.String(length=300), nullable=True),
    sa.Column('away_message_for_unknown', sa.String(length=300), nullable=True),
    sa.Column('created_time', sa.DateTime(timezone=True), nullable=True),
    sa.Column('updated_time', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['super_admin_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('super_admin_id')
    )
    op.create_index(op.f('ix_away_message_id'), 'away_message', ['id'], unique=False)
    op.create_table('chat_widget_configuration',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('super_admin_id', sa.Integer(), nullable=True),
    sa.Column('remove_chat_history_on_page_refresh', sa.Boolean(), nullable=True),
    sa.Column('history_removal_days', sa.Integer(), nullable=True),
    sa.Column('history_removal_hours', sa.Integer(), nullable=True),
    sa.Column('history_removal_minutes', sa.Integer(), nullable=True),
    sa.Column('bot_reply_delay', sa.Integer(), nullable=True),
    sa.Column('allow_single_thread_conversation', sa.Boolean(), nullable=True),
    sa.Column('disable_chat_widget', sa.Boolean(), nullable=True),
    sa.Column('domain_restriction_list', sa.ARRAY(sa.String(), dimensions=1), nullable=True),
    sa.Column('add_text_to_speech', sa.Boolean(), nullable=True),
    sa.Column('add_speech_to_text', sa.Boolean(), nullable=True),
    sa.Column('hide_attachment', sa.Boolean(), nullable=True),
    sa.Column('created_time', sa.DateTime(timezone=True), nullable=True),
    sa.Column('updated_time', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['super_admin_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('super_admin_id')
    )
    op.create_index(op.f('ix_chat_widget_configuration_id'), 'chat_widget_configuration', ['id'], unique=False)
    op.create_table('chat_widget_customization',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('super_admin_id', sa.Integer(), nullable=True),
    sa.Column('color', sa.String(length=50), nullable=True),
    sa.Column('launcher_option', models.ChoiceType(models.ChatWidgetCustomization.LAUNCHER_ICON_CHOICES), nullable=True),
    sa.Column('default_icon_option', models.ChoiceType(models.ChatWidgetCustomization.ICON_CHOICES), nullable=True),
    sa.Column('icon_image', sa.LargeBinary(), nullable=True),
    sa.Column('widget_position', models.ChoiceType(models.ChatWidgetCustomization.WIDGET_POSITION_CHOICES), nullable=True),
    sa.Column('show_branding', sa.Boolean(), nullable=True),
    sa.Column('chat_notification_sound', models.ChoiceType(models.ChatWidgetCustomization.NOTIFICATION_SOUND_CHOICES), nullable=True),
    sa.Column('created_time', sa.DateTime(timezone=True), nullable=True),
    sa.Column('updated_time', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['super_admin_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('super_admin_id')
    )
    op.create_index(op.f('ix_chat_widget_customization_id'), 'chat_widget_customization', ['id'], unique=False)
    op.create_table('customers',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('super_admin_id', sa.Integer(), nullable=True),
    sa.Column('customer_generated_name', sa.String(length=100), nullable=True),
    sa.Column('got_real_name', sa.Boolean(), nullable=True),
    sa.Column('customer_real_name', sa.String(length=100), nullable=True),
    sa.Column('customer_phone_number', sa.BigInteger(), nullable=True),
    sa.Column('customer_email', sa.String(length=100), nullable=True),
    sa.Column('is_deleted', sa.Boolean(), nullable=True),
    sa.Column('is_blocked', sa.Boolean(), nullable=True),
    sa.Column('is_online', sa.Boolean(), nullable=True),
    sa.Column('last_seen', sa.DateTime(timezone=True), nullable=True),
    sa.Column('created_time', sa.DateTime(timezone=True), nullable=True),
    sa.Column('updated_time', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['super_admin_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('customer_generated_name')
    )
    op.create_index(op.f('ix_customers_id'), 'customers', ['id'], unique=False)
    op.create_table('default_team',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('super_admin_id', sa.Integer(), nullable=True),
    sa.Column('assign_new_conv_to_bot', sa.Boolean(), nullable=True),
    sa.Column('bot_selected', sa.Integer(), nullable=True),
    sa.Column('notify_everybody', sa.Boolean(), nullable=True),
    sa.Column('initial_assignment', sa.Integer(), nullable=True),
    sa.Column('user_assigned_when_noone_is_online', sa.Integer(), nullable=True),
    sa.Column('created_time', sa.DateTime(timezone=True), nullable=True),
    sa.Column('updated_time', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['super_admin_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('super_admin_id')
    )
    op.create_index(op.f('ix_default_team_id'), 'default_team', ['id'], unique=False)
    op.create_table('greeting_message',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('super_admin_id', sa.Integer(), nullable=True),
    sa.Column('greeting_message_enabled', sa.Boolean(), nullable=True),
    sa.Column('msg_option_1', sa.String(length=35), nullable=True),
    sa.Column('msg_option_2', sa.String(length=150), nullable=True),
    sa.Column('msg_option_selected', models.ChoiceType(models.GreetingMessage.MESSAGE_OPTION_CHOICES), nullable=True),
    sa.Column('greeting_trigger_time', sa.Integer(), nullable=True),
    sa.Column('play_notification_sound', sa.Boolean(), nullable=True),
    sa.Column('show_greeting_on_mobile', sa.Boolean(), nullable=True),
    sa.Column('created_time', sa.DateTime(timezone=True), nullable=True),
    sa.Column('updated_time', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['super_admin_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('super_admin_id')
    )
    op.create_index(op.f('ix_greeting_message_id'), 'greeting_message', ['id'], unique=False)
    op.create_table('help_center_category',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('super_admin_id', sa.Integer(), nullable=True),
    sa.Column('category_title', sa.String(length=300), nullable=True),
    sa.Column('category_description', sa.String(length=500), nullable=True),
    sa.Column('creator_id', sa.Integer(), nullable=True),
    sa.Column('last_edited_by', sa.Integer(), nullable=True),
    sa.Column('created_time', sa.DateTime(timezone=True), nullable=True),
    sa.Column('updated_time', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['super_admin_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_help_center_category_id'), 'help_center_category', ['id'], unique=False)
    op.create_table('help_center_customization',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('super_admin_id', sa.Integer(), nullable=True),
    sa.Column('primary_color', sa.String(length=10), nullable=True),
    sa.Column('headline_text', sa.String(length=100), nullable=True),
    sa.Column('searchbar_text', sa.String(length=100), nullable=True),
    sa.Column('logo_image', sa.LargeBinary(), nullable=True),
    sa.Column('fav_icon', sa.LargeBinary(), nullable=True),
    sa.Column('show_branding', sa.Boolean(), nullable=True),
    sa.Column('show_live_chat_in_helpcenter', sa.Boolean(), nullable=True),
    sa.Column('homepage_title', sa.String(length=100), nullable=True),
    sa.Column('google_tag_manager_id', sa.String(length=100), nullable=True),
    sa.Column('custom_domain_url', sa.String(length=100), nullable=True),
    sa.Column('created_time', sa.DateTime(timezone=True), nullable=True),
    sa.Column('updated_time', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['super_admin_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('super_admin_id')
    )
    op.create_index(op.f('ix_help_center_customization_id'), 'help_center_customization', ['id'], unique=False)
    op.create_table('pre_chat_lead_collection',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('super_admin_id', sa.Integer(), nullable=True),
    sa.Column('is_mandatory', sa.Boolean(), nullable=True),
    sa.Column('field_type', models.ChoiceType(models.PreChatLeadCollection.FIELD_TYPE_CHOICES), nullable=True),
    sa.Column('field_name', sa.String(length=150), nullable=True),
    sa.Column('place_holder', sa.String(length=150), nullable=True),
    sa.Column('created_time', sa.DateTime(timezone=True), nullable=True),
    sa.Column('updated_time', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['super_admin_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_pre_chat_lead_collection_id'), 'pre_chat_lead_collection', ['id'], unique=False)
    op.create_table('quick_reply',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('super_admin_id', sa.Integer(), nullable=True),
    sa.Column('shortcut_message', sa.String(length=50), nullable=True),
    sa.Column('full_message', sa.String(length=300), nullable=True),
    sa.Column('created_time', sa.DateTime(timezone=True), nullable=True),
    sa.Column('updated_time', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['super_admin_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_quick_reply_id'), 'quick_reply', ['id'], unique=False)
    op.create_table('tags',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('tag_name', sa.String(), nullable=False),
    sa.Column('super_admin_id', sa.Integer(), nullable=True),
    sa.Column('created_time', sa.DateTime(timezone=True), nullable=True),
    sa.Column('updated_time', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['super_admin_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_tags_id'), 'tags', ['id'], unique=False)
    op.create_table('welcome_message_configuration',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('super_admin_id', sa.Integer(), nullable=True),
    sa.Column('show_welcome_message', sa.Boolean(), nullable=True),
    sa.Column('collect_email_id', sa.Boolean(), nullable=True),
    sa.Column('message_categories', sa.ARRAY(sa.String(), dimensions=1), nullable=False),
    sa.Column('created_time', sa.DateTime(timezone=True), nullable=True),
    sa.Column('updated_time', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['super_admin_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('super_admin_id')
    )
    op.create_index(op.f('ix_welcome_message_configuration_id'), 'welcome_message_configuration', ['id'], unique=False)
    op.create_table('bot',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('bot_name', sa.String(length=30), nullable=True),
    sa.Column('bot_photo', sa.String(length=100), nullable=True),
    sa.Column('created_user_id', sa.Integer(), nullable=True),
    sa.Column('integration_platform', models.ChoiceType(models.Bot.INTEGRATION_CHOICES), nullable=True),
    sa.Column('default_team_id', sa.Integer(), nullable=True),
    sa.Column('allow_human_handoff', sa.Boolean(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('created_time', sa.DateTime(timezone=True), nullable=True),
    sa.Column('updated_time', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['created_user_id'], ['users.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['default_team_id'], ['default_team.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_bot_id'), 'bot', ['id'], unique=False)
    op.create_table('help_center_article',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('category_id', sa.Integer(), nullable=True),
    sa.Column('article_title', sa.String(length=300), nullable=True),
    sa.Column('article_description', sa.String(length=500), nullable=True),
    sa.Column('author_id', sa.Integer(), nullable=True),
    sa.Column('status_and_visiblity', models.ChoiceType(models.HelpCenterArticle.STATUS_CHOICES), nullable=True),
    sa.Column('last_edited_by', sa.Integer(), nullable=True),
    sa.Column('created_time', sa.DateTime(timezone=True), nullable=True),
    sa.Column('updated_time', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['author_id'], ['users.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['category_id'], ['help_center_category.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['last_edited_by'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_help_center_article_id'), 'help_center_article', ['id'], unique=False)
    op.create_table('operator_permissions',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('account_options_id', sa.Integer(), nullable=True),
    sa.Column('allow_assign_to_teammates', sa.Boolean(), nullable=True),
    sa.Column('allow_assign_back_to_bot', sa.Boolean(), nullable=True),
    sa.Column('allow_reassign_to_team', sa.Boolean(), nullable=True),
    sa.Column('created_time', sa.DateTime(timezone=True), nullable=True),
    sa.Column('updated_time', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['account_options_id'], ['account_options.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('account_options_id')
    )
    op.create_index(op.f('ix_operator_permissions_id'), 'operator_permissions', ['id'], unique=False)
    op.create_table('team',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('team_name', sa.String(length=30), nullable=False),
    sa.Column('default_team_id', sa.Integer(), nullable=False),
    sa.Column('team_lead_id', sa.Integer(), nullable=False),
    sa.Column('created_time', sa.DateTime(timezone=True), nullable=True),
    sa.Column('updated_time', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['default_team_id'], ['default_team.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['team_lead_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_team_id'), 'team', ['id'], unique=False)
    op.create_table('welcome_messages',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('welcome_msg_config_id', sa.Integer(), nullable=True),
    sa.Column('welcome_message', sa.String(length=200), nullable=True),
    sa.Column('message_category', models.ChoiceType(models.WelcomeMessages.MESSAGE_CHOICES), nullable=True),
    sa.Column('created_time', sa.DateTime(timezone=True), nullable=True),
    sa.Column('updated_time', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['welcome_msg_config_id'], ['welcome_message_configuration.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_welcome_messages_id'), 'welcome_messages', ['id'], unique=False)
    op.create_table('bot_team_association',
    sa.Column('team_id', sa.Integer(), nullable=False),
    sa.Column('bot_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['bot_id'], ['bot.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['team_id'], ['team.id'], ondelete='CASCADE')
    )
    op.create_table('conversation',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('super_admin_id', sa.Integer(), nullable=True),
    sa.Column('conversation_uuid', sa.String(length=100), nullable=True),
    sa.Column('customer_id', sa.Integer(), nullable=True),
    sa.Column('conversation_handler', models.ChoiceType(models.Conversation.HANDLER_CHOICES), nullable=True),
    sa.Column('assigned_bot_id', sa.Integer(), nullable=True),
    sa.Column('assigned_agent_id', sa.Integer(), nullable=True),
    sa.Column('conversation_manually_assigned', sa.Boolean(), nullable=True),
    sa.Column('conversation_assignee_id', sa.Integer(), nullable=True),
    sa.Column('send_transcript_to_user', sa.Boolean(), nullable=True),
    sa.Column('end_user_conversation_status', models.ChoiceType(models.Conversation.CONVERSATION_STATUS_CHOICES), nullable=True),
    sa.Column('is_spam', sa.Boolean(), nullable=True),
    sa.Column('conversation_deleted', sa.Boolean(), nullable=True),
    sa.Column('conversation_started', sa.Boolean(), nullable=True),
    sa.Column('first_message_time', sa.DateTime(timezone=True), nullable=True),
    sa.Column('first_response_time', sa.DateTime(timezone=True), nullable=True),
    sa.Column('conversation_resolved_time', sa.DateTime(timezone=True), nullable=True),
    sa.Column('conv_handed_to_agent', sa.Boolean(), nullable=True),
    sa.Column('confidence_level', sa.Float(), nullable=True),
    sa.Column('intent_detected', sa.Text(), nullable=True),
    sa.Column('response', sa.Text(), nullable=True),
    sa.Column('last_contacted', sa.DateTime(timezone=True), nullable=True),
    sa.Column('created_time', sa.DateTime(timezone=True), nullable=True),
    sa.Column('updated_time', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['assigned_agent_id'], ['users.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['assigned_bot_id'], ['bot.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['conversation_assignee_id'], ['users.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['customer_id'], ['customers.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['super_admin_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('conversation_uuid')
    )
    op.create_index(op.f('ix_conversation_id'), 'conversation', ['id'], unique=False)
    op.create_table('conversation_rules',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('team_id', sa.Integer(), nullable=True),
    sa.Column('assign_new_conv_to_bot', sa.Boolean(), nullable=True),
    sa.Column('bot_selected_id', sa.Integer(), nullable=True),
    sa.Column('notify_everybody', sa.Boolean(), nullable=True),
    sa.Column('initial_assignment', sa.Integer(), nullable=True),
    sa.Column('user_assigned_when_noone_is_online', sa.Integer(), nullable=True),
    sa.Column('created_time', sa.DateTime(timezone=True), nullable=True),
    sa.Column('updated_time', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['bot_selected_id'], ['bot.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['team_id'], ['team.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('team_id')
    )
    op.create_index(op.f('ix_conversation_rules_id'), 'conversation_rules', ['id'], unique=False)
    op.create_table('custom_bot_platform',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('bot_id', sa.Integer(), nullable=True),
    sa.Column('webhook_url', sa.String(length=300), nullable=True),
    sa.Column('header_key', sa.String(length=100), nullable=True),
    sa.Column('header_value', sa.String(length=100), nullable=True),
    sa.Column('created_time', sa.DateTime(timezone=True), nullable=True),
    sa.Column('updated_time', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['bot_id'], ['bot.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_custom_bot_platform_id'), 'custom_bot_platform', ['id'], unique=False)
    op.create_table('dialogflow_cx',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('bot_id', sa.Integer(), nullable=True),
    sa.Column('dialogflow_private_key', sa.Text(), nullable=True),
    sa.Column('default_region', models.ChoiceType(models.DialogFlowCX.REGION_CHOICES), nullable=True),
    sa.Column('agent_id', sa.String(length=100), nullable=True),
    sa.Column('created_time', sa.DateTime(timezone=True), nullable=True),
    sa.Column('updated_time', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['bot_id'], ['bot.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_dialogflow_cx_id'), 'dialogflow_cx', ['id'], unique=False)
    op.create_table('dialogflow_es',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('bot_id', sa.Integer(), nullable=True),
    sa.Column('dialogflow_private_key', sa.Text(), nullable=True),
    sa.Column('default_language', models.ChoiceType(models.DialogFlowES.LANGUAGE_CHOICES), nullable=True),
    sa.Column('default_region', models.ChoiceType(models.DialogFlowES.REGION_CHOICES), nullable=True),
    sa.Column('dialogflow_knowledge_base_id', sa.ARRAY(sa.String(), dimensions=1), nullable=True),
    sa.Column('created_time', sa.DateTime(timezone=True), nullable=True),
    sa.Column('updated_time', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['bot_id'], ['bot.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_dialogflow_es_id'), 'dialogflow_es', ['id'], unique=False)
    op.create_table('user_team_association',
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('team_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['team_id'], ['team.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE')
    )
    op.create_table('conversation_tag',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('tag_id', sa.Integer(), nullable=True),
    sa.Column('conversation_id', sa.Integer(), nullable=True),
    sa.Column('created_time', sa.DateTime(timezone=True), nullable=True),
    sa.Column('updated_time', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['conversation_id'], ['conversation.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['tag_id'], ['tags.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_conversation_tag_id'), 'conversation_tag', ['id'], unique=False)
    op.create_table('csat_ratings',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('super_admin_id', sa.Integer(), nullable=True),
    sa.Column('conversation_id', sa.Integer(), nullable=True),
    sa.Column('rating', models.IntegerChoiceType(models.CsatRatings.RATING_CHOICES), nullable=True),
    sa.Column('comment', sa.TEXT(), nullable=True),
    sa.ForeignKeyConstraint(['conversation_id'], ['conversation.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['super_admin_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_csat_ratings_id'), 'csat_ratings', ['id'], unique=False)
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_csat_ratings_id'), table_name='csat_ratings')
    op.drop_table('csat_ratings')
    op.drop_index(op.f('ix_conversation_tag_id'), table_name='conversation_tag')
    op.drop_table('conversation_tag')
    op.drop_table('user_team_association')
    op.drop_index(op.f('ix_dialogflow_es_id'), table_name='dialogflow_es')
    op.drop_table('dialogflow_es')
    op.drop_index(op.f('ix_dialogflow_cx_id'), table_name='dialogflow_cx')
    op.drop_table('dialogflow_cx')
    op.drop_index(op.f('ix_custom_bot_platform_id'), table_name='custom_bot_platform')
    op.drop_table('custom_bot_platform')
    op.drop_index(op.f('ix_conversation_rules_id'), table_name='conversation_rules')
    op.drop_table('conversation_rules')
    op.drop_index(op.f('ix_conversation_id'), table_name='conversation')
    op.drop_table('conversation')
    op.drop_table('bot_team_association')
    op.drop_index(op.f('ix_welcome_messages_id'), table_name='welcome_messages')
    op.drop_table('welcome_messages')
    op.drop_index(op.f('ix_team_id'), table_name='team')
    op.drop_table('team')
    op.drop_index(op.f('ix_operator_permissions_id'), table_name='operator_permissions')
    op.drop_table('operator_permissions')
    op.drop_index(op.f('ix_help_center_article_id'), table_name='help_center_article')
    op.drop_table('help_center_article')
    op.drop_index(op.f('ix_bot_id'), table_name='bot')
    op.drop_table('bot')
    op.drop_index(op.f('ix_welcome_message_configuration_id'), table_name='welcome_message_configuration')
    op.drop_table('welcome_message_configuration')
    op.drop_index(op.f('ix_tags_id'), table_name='tags')
    op.drop_table('tags')
    op.drop_index(op.f('ix_quick_reply_id'), table_name='quick_reply')
    op.drop_table('quick_reply')
    op.drop_index(op.f('ix_pre_chat_lead_collection_id'), table_name='pre_chat_lead_collection')
    op.drop_table('pre_chat_lead_collection')
    op.drop_index(op.f('ix_help_center_customization_id'), table_name='help_center_customization')
    op.drop_table('help_center_customization')
    op.drop_index(op.f('ix_help_center_category_id'), table_name='help_center_category')
    op.drop_table('help_center_category')
    op.drop_index(op.f('ix_greeting_message_id'), table_name='greeting_message')
    op.drop_table('greeting_message')
    op.drop_index(op.f('ix_default_team_id'), table_name='default_team')
    op.drop_table('default_team')
    op.drop_index(op.f('ix_customers_id'), table_name='customers')
    op.drop_table('customers')
    op.drop_index(op.f('ix_chat_widget_customization_id'), table_name='chat_widget_customization')
    op.drop_table('chat_widget_customization')
    op.drop_index(op.f('ix_chat_widget_configuration_id'), table_name='chat_widget_configuration')
    op.drop_table('chat_widget_configuration')
    op.drop_index(op.f('ix_away_message_id'), table_name='away_message')
    op.drop_table('away_message')
    op.drop_index(op.f('ix_account_options_id'), table_name='account_options')
    op.drop_table('account_options')
    op.drop_index(op.f('ix_users_id'), table_name='users')
    op.drop_index(op.f('ix_users_email_verification_code'), table_name='users')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_table('users')
    op.drop_index(op.f('ix_company_id'), table_name='company')
    op.drop_table('company')
    # ### end Alembic commands ###
